# Generated by Django 4.0.3 on 2022-05-05 15:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=1000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='movies')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='banners')),
                ('category', models.CharField(blank=True, choices=[('action', 'ACTION'), ('adventure', 'ADVENTURE'), ('animated', 'ANIMATED'), ('comedy', 'COMEDY'), ('crime', 'CRIME'), ('drama', 'DRAMA'), ('fantasy', 'FANTASY'), ('horror', 'HORROR'), ('historical', 'HISTORICAL'), ('romance', 'ROMANCE'), ('western', 'WESTERN'), ('science-fiction', 'SCIENCE FICTION')], max_length=22)),
                ('language', models.CharField(blank=True, choices=[('english', 'ENGLISH'), ('hebrew', 'HEBREW'), ('spanish', 'SPANISH')], max_length=20)),
                ('status', models.CharField(blank=True, choices=[('recently-added', 'RECENTLY ADDED'), ('most-watched', 'MOST WATCHED'), ('top-rated', 'TOP RATED')], max_length=20)),
                ('year_of_production', models.DateField()),
                ('views_count', models.IntegerField(blank=True, default=0, null=True)),
                ('movie_trailer', models.URLField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_path', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='persons')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('known_for_department', models.CharField(blank=True, max_length=100, null=True)),
                ('death', models.DateField(blank=True, default=None, null=True)),
                ('also_known_as', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('none', 'None')], max_length=10, null=True)),
                ('biography', models.TextField(blank=True, max_length=1000, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('address', models.CharField(blank=True, max_length=128, null=True)),
                ('favorite_category', models.CharField(blank=True, choices=[('action', 'ACTION'), ('adventure', 'ADVENTURE'), ('animated', 'ANIMATED'), ('comedy', 'COMEDY'), ('crime', 'CRIME'), ('drama', 'DRAMA'), ('fantasy', 'FANTASY'), ('horror', 'HORROR'), ('historical', 'HISTORICAL'), ('romance', 'ROMANCE'), ('western', 'WESTERN'), ('science-fiction', 'SCIENCE FICTION')], max_length=128, null=True)),
                ('favorite_movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userprofile',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(10, 'perfect'), (9, 'extraordinary'), (8, 'excellent'), (7, 'very good'), (6, 'good'), (5, 'not bad'), (4, 'ok'), (3, 'bad'), (2, 'really bad'), (1, 'sucks!')])),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovieLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('download', 'DOWNLOAD LINK'), ('watch', 'WATCH LINK')], max_length=10)),
                ('link', models.URLField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_watch_link', to='movie.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieCast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.person')),
            ],
            options={
                'unique_together': {('person', 'movie')},
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='cast',
            field=models.ManyToManyField(blank=True, related_name='movies', through='movie.MovieCast', to='movie.person'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=128)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('important', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_comments', to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='BlockList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocklist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'movie')},
            },
        ),
    ]
